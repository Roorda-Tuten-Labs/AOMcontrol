function CFG = perimetry_CFG_gui()
    % CFG = perimetry_CFG_gui()
    %
    % Get experimental parameters (CFG).
        
    CFG = perimetry_CFG_load();
    CFG.run_calibration = 0;
    
    %  Construct the components
    textbox_height = 0.08;
    radio_height = 0.12;    
    row_y = [0.9 0.88, 0.76, 0.74, 0.62, 0.6, 0.5, 0.4, 0.3 0.2];
    
    % ---- Figure handle
    f = figure('Visible','on','Name','parameters',...
            'Position',[500, 500, 475, 500], 'Toolbar', 'none');
    
    % ---- Panel
    ph = uipanel('Parent',f, 'Title', 'Experiment parameters',...
            'Position',[.05 .05 .9 .9]);

    % ---- Text boxes
    uicontrol(ph,'Style','text',...
                'String','Subject ID',...
                'Units','normalized',...
                'Position',[.05 row_y(1) .25 .10]);
            
    initials = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', CFG.initials,...
            'Position', [.05 row_y(2) .25 textbox_height]);

    uicontrol(ph,'Style','text',...
                'String','pupil size (mm)',...
                'Units','normalized',...
                'Position', [.05 row_y(3) .25 .10]);
            
    pupilsize = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', num2str(CFG.pupilsize),...
            'Position', [.05 row_y(4) .25 textbox_height]); 
        
    uicontrol(ph,'Style','text',...
                'String','fieldsize (deg)',...
                'Units','normalized',...
                'Position',[.05 row_y(5) .25 .10]);
            
    fieldsize = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', num2str(CFG.fieldsize),...
            'Position', [.05 row_y(6) .25 textbox_height]);
        
    uicontrol(ph,'Style','text',...
                'String','threshold FoS',...
                'Units','normalized',...
                'Position',[.05 row_y(7) .25 .10]);
            
    pThreshold = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', num2str(CFG.pThreshold),...
            'Position', [.05 row_y(8) .25 textbox_height]);
        
        
    uicontrol(ph,'Style','text',...
                'String','stim size (pix)',...
                'Units','normalized',...
                'Position',[.35 row_y(1) .25 .10]);
            
    stimsize = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', num2str(CFG.stimsize),...
            'Position', [.35 row_y(2) .25 textbox_height]); 

    uicontrol(ph,'Style','text',...
                'String','flash dur (msec)',...
                'Units','normalized',...
                'Position',[.35 row_y(3) .25 .10]);
            
    presentdur = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', num2str(CFG.presentdur),...
            'Position', [.35 row_y(4) .25 textbox_height]); 

    uicontrol(ph,'Style','text',...
                'String','# trials',...
                'Units','normalized',...
                'Position',[.35 row_y(5) .25 .10]);
            
    ntrials = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', num2str(CFG.ntrials),...
            'Position', [.35 row_y(6) .25 textbox_height]); 

        
    uicontrol(ph,'Style','text',...
                'String','tracking gain',...
                'Units','normalized',...
                'Position',[.65 row_y(1) .275 .10]); 
            
    gain = uicontrol(ph,'Style','edit',...
            'Units','normalized',...
            'String', num2str(CFG.gain),...
            'Position', [.65 row_y(2) .275 textbox_height]);%, ...
            %'Enable', 'Inactive', ...
            %'ButtonDownFcn', @get_cal_file);
            
%     uicontrol(ph,'Style','text',...
%                 'String','N scale',...
%                 'Units','normalized',...
%                 'Position',[.65 row_y(3) .275 .10]);
%             
%     nscale = uicontrol(ph,'Style','edit',...
%             'Units','normalized',...
%             'String', num2str(CFG.nscale),...
%             'Position', [.65 row_y(4) .275 textbox_height]); 
%         
%     uicontrol(ph,'Style','text',...
%                 'String','system: aoslo, tslo, etc',...
%                 'Units','normalized',...
%                 'Position',[.65 row_y(5) .275 .10]);
%             
%     system = uicontrol(ph,'Style','edit',...
%             'Units','normalized',...
%             'String', CFG.system,...
%             'Position', [.65 row_y(6) .275 textbox_height]);
        
%     uicontrol(ph,'Style','text',...
%                 'String','fraction blank',...
%                 'Units','normalized',...
%                 'Position',[.65 0.46 .275 .10]);
%             
%     fraction_blank = uicontrol(ph,'Style','edit',...
%             'Units','normalized',...
%             'String', CFG.fraction_blank,...
%             'Position', [.65 0.44 .275 textbox_height]);
        
    % ---- Radio buttons
    uicontrol(ph,'Style','text',...
            'String','stim shape',...
            'Units','normalized',...
            'Position',[.35 row_y(7) .25 .07]);  
        
    stimshape = uibuttongroup(ph, 'Units','Normalized', ...
        'Position', [.35 row_y(8) .25 radio_height]);
    
    b1 = uicontrol('Style','Radio', 'Parent', stimshape, ...
        'HandleVisibility','off', ...
        'Units','Normalized', ...
        'Position', [.1 .6 .8 .35], ...
        'String','square', 'Tag','square');

    b2 = uicontrol('Style','Radio', 'Parent', stimshape, ...
        'HandleVisibility','off', ...
        'Units','Normalized', ...
        'Position',  [.1 .1 .8 .35], ...
        'String','circle', 'Tag','circle');
    
    % set the default selected button.
    if strcmpi(CFG.stimshape, 'square')
        set(stimshape,'SelectedObject', b1);  % Set the object
    else
        set(stimshape,'SelectedObject', b2);  % Set the object
    end
    
%     uicontrol(ph,'Style','text',...
%             'String','brightness scaling?',...
%             'Units','normalized',...
%             'Position',[.05 row_y(9) .25 .07]);  
%         
%     brigntness_scaling = uibuttongroup(ph, 'Units','Normalized', ...
%         'Position', [.05 row_y(10) .25 radio_height]);
%     
%     b1 = uicontrol('Style','Radio', 'Parent', brigntness_scaling, ...
%         'HandleVisibility','off', ...
%         'Units','Normalized', ...
%         'Position', [.1 .6 .8 .35], ...
%         'String','false', 'Tag','0');
% 
%     b2 = uicontrol('Style','Radio', 'Parent', brigntness_scaling, ...
%         'HandleVisibility','off', ...
%         'Units','Normalized', ...
%         'Position',  [.1 .1 .8 .35], ...
%         'String','true', 'Tag','1');
%     
%     % set the default selected button.
%     if CFG.brightness_scaling
%         set(brigntness_scaling, 'SelectedObject', b2);  % Set the object
%     else
%         set(brigntness_scaling, 'SelectedObject', b1);  % Set the object
%     end
        
%     uicontrol(ph,'Style','text',...
%                 'String','cone selection',...
%                 'Units','normalized',...
%                 'Position',[.05 row_y(7) .25 .07]);            
% 
%     cone_selection = uibuttongroup(ph, 'Units','Normalized', ...
%         'Position', [.05 row_y(8) .25 radio_height]);
%     
%     b1 = uicontrol('Style','Radio', 'Parent', cone_selection, ...
%         'HandleVisibility','off', ...
%         'Units','Normalized', ...
%         'Position', [.1 .6 .8 .35], ...
%         'String','auto', 'Tag', 'auto');
%     
%     b2 = uicontrol('Style','Radio', 'Parent', cone_selection, ...
%         'HandleVisibility','off', ...
%         'Units','Normalized', ...
%         'Position',  [.1 .1 .8 .35], ...
%         'String','manual', 'Tag', 'manual');
%     
%     % set the default selected button.
%     if strcmpi(CFG.cone_selection, 'auto')
%         set(cone_selection,'SelectedObject', b1);  % Set the object
%     else
%         set(cone_selection,'SelectedObject', b2);  % Set the object
%     end
% 
%            
%     uicontrol(ph,'Style','text',...
%                 'String','intensity sequence',...
%                 'Units','normalized',...
%                 'Position',[.35 row_y(9) .25 .07]);            
% 
%     run_intensity_sequence = uibuttongroup(ph, 'Units','Normalized', ...
%         'Position', [.35 row_y(10) .25 radio_height]);
%     
%     b1 = uicontrol('Style','Radio', 'Parent', run_intensity_sequence, ...
%         'HandleVisibility','off', ...
%         'Units','Normalized', ...
%         'Position', [.1 .6 .8 .35], ...
%         'String','false', 'Tag', '0');
%     
%     b2 = uicontrol('Style','Radio', 'Parent', run_intensity_sequence, ...
%         'HandleVisibility','off', ...
%         'Units','Normalized', ...
%         'Position',  [.1 .1 .8 .35], ...
%         'String','true', 'Tag', '1');
%     
%     % set the default selected button.
%     if CFG.run_intensity_sequence == 0
%         set(run_intensity_sequence,'SelectedObject', b1);  % Set the object
%     else
%         set(run_intensity_sequence,'SelectedObject', b2);  % Set the object
%     end
                
    % ---- TCA Panel
    
    tcapanel = uipanel('Parent',f, 'Title', 'TCA',...
            'Position',[.635 0.15 .25 .22]);
        
    
    uicontrol(tcapanel,'Style','text',...
                'String','X',...
                'Units','normalized',...
                'Position', [.4 .85 .1 .15]);
            
    uicontrol(tcapanel,'Style','text',...
                'String','Y',...
                'Units','normalized',...
                'Position', [.68 .85 .1 .15]);
            
    uicontrol(tcapanel,'Style','text',...
                'String','red',...
                'Units','normalized',...
                'Position', [.02 .6 .25 .15]); 
            
    uicontrol(tcapanel,'Style','text',...
                'String','green',...
                'Units','normalized',...
                'Position', [.02 .2 .25 .15]);  
            
    red_x_offset = uicontrol(tcapanel,'Style','edit',...
                'Units','normalized',...
                'enable', 'off', ...
                'String', CFG.red_x_offset,...
                'Position', [.3 .5 .3 .3]);

    red_y_offset = uicontrol(tcapanel,'Style','edit',...
                'Units','normalized',...
                'enable', 'off', ...
                'String', CFG.red_y_offset,...
                'Position', [.6 .5 .3 .3]);
            

    green_x_offset = uicontrol(tcapanel,'Style','edit',...
                'Units','normalized',...
                'String', CFG.green_x_offset,...
                'Position', [.3 .1 .3 .3]);

    green_y_offset = uicontrol(tcapanel,'Style','edit',...
                'Units','normalized',...
                'String', CFG.green_y_offset,...
                'Position', [.6 .1 .3 .3]);
            
    % ---- Buttons
    uicontrol(ph,'Style','pushbutton','String','start',...
            'Units','normalized',...
            'Position', [.3 .01 .4 .08], ...
            'Callback', 'uiresume(gcbf)');
        
%     uicontrol(ph,'Style','pushbutton','String','cal',...
%             'Units','normalized',...
%             'Position', [.01 .01 .2 .08], ...
%             'Callback', @calibration);  
        
    uiwait(f);
    
    get_current_CFG();
    
    close(f);
    
    
%     function calibration(~, ~)
%         CFG.run_calibration = 1;
%         uiresume(gcbf)
%     end
%     
    function get_current_CFG()
        CFG.initials = get(initials, 'String');
        CFG.stimshape = get(get(stimshape, 'SelectedObject'), 'Tag');
        CFG.cone_selection = 'manual';
        
        CFG.fieldsize = str2double(get(fieldsize, 'String'));
        CFG.presentdur = str2double(get(presentdur, 'String'));
        CFG.pupilsize = str2double(get(pupilsize, 'String'));
        CFG.ntrials = str2double(get(ntrials, 'String'));
        CFG.gain = str2double(get(gain, 'String'));
        CFG.stimsize = str2double(get(stimsize, 'String'));
        
        CFG.pThreshold = str2double(get(pThreshold, 'String'));

        
        CFG.red_x_offset = str2double(get(red_x_offset, 'String'));
        CFG.red_y_offset = str2double(get(red_y_offset, 'String'));
        CFG.green_x_offset = str2double(get(green_x_offset, 'String'));
        CFG.green_y_offset = str2double(get(green_y_offset, 'String'));
                
        % save updated parameters for next time.
        save(fullfile('Experiments', 'perimetry_CFG.mat'), 'CFG');
        
    end    

end